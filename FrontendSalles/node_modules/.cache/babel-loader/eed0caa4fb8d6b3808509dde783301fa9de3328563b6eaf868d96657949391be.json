{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\GitHub\\\\localbookingtest\\\\src\\\\Calendar.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [eventInfo, setEventInfo] = useState(null);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const handleDateClick = arg => {\n    // Open a modal or a form to capture user input\n    const eventData = {\n      start: arg.date,\n      end: arg.date,\n      // For simplicity, assuming start and end are the same\n      allDay: true // All-day event by default\n    };\n    setEventInfo(eventData);\n  };\n  const handleEventDrop = arg => {\n    // Update the event's start and end time when dropped on a\n    const updatedEvent = {\n      ...arg.event.toPlainObject(),\n      start: arg.event.start,\n      end: arg.event.end\n    };\n    const updatedEvents = calendarEvents.map(event => event.id === updatedEvent.id ? updatedEvent : event);\n    setCalendarEvents(updatedEvents);\n  };\n  const handleSubmit = formData => {\n    // Create a new event object with form data\n    const newEvent = {\n      title: formData.name,\n      start: eventInfo.start,\n      end: eventInfo.end,\n      allDay: eventInfo.allDay,\n      color: formData.color,\n      otherUsers: formData.otherUsers,\n      comment: formData.comment,\n      id: generateEventId() // Generate unique id for the event\n    };\n\n    // Add the new event to the calendar's events array\n    setCalendarEvents([...calendarEvents, newEvent]);\n\n    // Reset eventInfo state\n    setEventInfo(null);\n  };\n  const generateEventId = () => {\n    // Simple function to generate a unique id for events\n    return Math.random().toString(36).substring(7);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      headerToolbar: {\n        start: \"today prev,next\",\n        center: \"title\",\n        end: \"dayGridMonth,timeGridWeek,timeGridDay\"\n      },\n      height: \"90vh\",\n      dateClick: handleDateClick,\n      eventDrop: handleEventDrop // Handle event drop\n      ,\n      events: calendarEvents // Pass the events array to the calendar\n      ,\n      editable: true // Enable event dragging\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), eventInfo && /*#__PURE__*/_jsxDEV(EventForm, {\n      eventInfo: eventInfo,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n// Form component for capturing event details\n_s(Calendar, \"k46mFBhVF3ZqCHQy1Q4Ru7MJVMQ=\");\n_c = Calendar;\nfunction EventForm({\n  eventInfo,\n  onSubmit\n}) {\n  _s2();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    duration: \"\",\n    comment: \"\",\n    color: \"\",\n    otherUsers: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Validate form data if needed\n    onSubmit(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s2(EventForm, \"AlIIA0nrBn6W0U1wfOIiMQC1CTY=\");\n_c2 = EventForm;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"EventForm\");","map":{"version":3,"names":["React","useState","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","Calendar","_s","eventInfo","setEventInfo","calendarEvents","setCalendarEvents","handleDateClick","arg","eventData","start","date","end","allDay","handleEventDrop","updatedEvent","event","toPlainObject","updatedEvents","map","id","handleSubmit","formData","newEvent","title","name","color","otherUsers","comment","generateEventId","Math","random","toString","substring","children","plugins","initialView","headerToolbar","center","height","dateClick","eventDrop","events","editable","fileName","_jsxFileName","lineNumber","columnNumber","EventForm","onSubmit","_c","_s2","setFormData","duration","handleChange","e","value","target","preventDefault","className","type","onChange","_c2","$RefreshReg$"],"sources":["C:/Users/hp/Documents/GitHub/localbookingtest/src/Calendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nfunction Calendar() {\r\n  const [eventInfo, setEventInfo] = useState(null);\r\n  const [calendarEvents, setCalendarEvents] = useState([]);\r\n\r\n  const handleDateClick = (arg) => {\r\n    // Open a modal or a form to capture user input\r\n    const eventData = {\r\n      start: arg.date,\r\n      end: arg.date, // For simplicity, assuming start and end are the same\r\n      allDay: true, // All-day event by default\r\n    };\r\n    setEventInfo(eventData);\r\n  };\r\n\r\n  const handleEventDrop = (arg) => {\r\n    // Update the event's start and end time when dropped on a\r\n    const updatedEvent = {\r\n      ...arg.event.toPlainObject(),\r\n      start: arg.event.start,\r\n      end: arg.event.end,\r\n    };\r\n\r\n    const updatedEvents = calendarEvents.map((event) =>\r\n      event.id === updatedEvent.id ? updatedEvent : event\r\n    );\r\n\r\n    setCalendarEvents(updatedEvents);\r\n  };\r\n\r\n  const handleSubmit = (formData) => {\r\n    // Create a new event object with form data\r\n    const newEvent = {\r\n      title: formData.name,\r\n      start: eventInfo.start,\r\n      end: eventInfo.end,\r\n      allDay: eventInfo.allDay,\r\n      color: formData.color,\r\n      otherUsers: formData.otherUsers,\r\n      comment: formData.comment,\r\n      id: generateEventId(), // Generate unique id for the event\r\n    };\r\n\r\n    // Add the new event to the calendar's events array\r\n    setCalendarEvents([...calendarEvents, newEvent]);\r\n\r\n    // Reset eventInfo state\r\n    setEventInfo(null);\r\n  };\r\n\r\n  const generateEventId = () => {\r\n    // Simple function to generate a unique id for events\r\n    return Math.random().toString(36).substring(7);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        initialView={\"dayGridMonth\"}\r\n        headerToolbar={{\r\n          start: \"today prev,next\",\r\n          center: \"title\",\r\n          end: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n        }}\r\n        height={\"90vh\"}\r\n        dateClick={handleDateClick}\r\n        eventDrop={handleEventDrop} // Handle event drop\r\n        events={calendarEvents} // Pass the events array to the calendar\r\n        editable={true} // Enable event dragging\r\n      />\r\n      {eventInfo && (\r\n        <EventForm eventInfo={eventInfo} onSubmit={handleSubmit} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Form component for capturing event details\r\nfunction EventForm({ eventInfo, onSubmit }) {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    duration: \"\",\r\n    comment: \"\",\r\n    color: \"\",\r\n    otherUsers: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validate form data if needed\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-form\">\r\n      <h2>New Event</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n        />\r\n        {/* Other form fields */}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}